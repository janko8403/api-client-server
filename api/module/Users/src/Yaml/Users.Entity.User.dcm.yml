Users\Entity\User:
  type: entity
  repositoryClass: Users\Repository\UserRepository
  table: user
  id:
    id:
      type: integer
      nullable: false
      options:
        unsigned: false
      id: true
      generator:
        strategy: IDENTITY
  fields:
    isactive:
      type: boolean
      nullable: false
      options:
        default: '1'
      column: isActive
    istester:
      type: boolean
      nullable: false
      options:
        comment: '0 - nie tester, 1 - tester'
        default: '0'
      column: isTester
    password:
      type: string
      nullable: false
      length: 40
      options:
        fixed: true
    login:
      type: string
      nullable: false
      length: 20
      options:
        fixed: false
    name:
      type: string
      nullable: false
      length: 255
      options:
        fixed: false
    surname:
      type: string
      nullable: false
      length: 255
      options:
        fixed: false
    email:
      type: string
      nullable: true
      length: 100
      options:
        fixed: false
    phonenumber:
      type: string
      nullable: true
      length: 11
      options:
        fixed: false
      column: phoneNumber
    lastPasswordChange:
      type: datetime
      nullable: true
    tempPassword:
      type: boolean
      nullable: false
      options:
        default: false
    creationDate:
      type: datetime
      nullable: true
    lastLogin:
      type: datetime
      nullable: true
    npsValue:
      type: integer
      nullable: true
    dailyProductivity:
      type: integer
      nullable: true
    listOfCategory:
      type: string
      nullable: true
    referenceNumber:
      type: string
      nullable: true
    passwordToken:
      type: string
      nullable: true
    company:
      type: string
      nullable: true
  oneToMany:
    groups:
      targetEntity: UserGroup
      mappedBy: user
  manyToOne:
    region:
      targetEntity: Hr\Entity\DictionaryDetails
      cascade: { }
      fetch: LAZY
      mappedBy: null
      inversedBy: null
      joinColumns:
        regionDicId:
          referencedColumnName: id
      orphanRemoval: false
    position:
      targetEntity: Hr\Entity\DictionaryDetails
      cascade: { }
      fetch: LAZY
      mappedBy: null
      inversedBy: null
      joinColumns:
        positionDicId:
          referencedColumnName: id
      orphanRemoval: false
    supervisor:
      targetEntity: Users\Entity\User
      cascade: { }
      fetch: LAZY
      mappedBy: null
      inversedBy: null
      joinColumns:
        supervisorId:
          referencedColumnName: id
      orphanRemoval: false
    configurationPosition:
      targetEntity: Configuration\Entity\Position
      joinColumns:
        configurationPositionId:
          referencedColumnName: id
    chain:
      targetEntity: Hr\Entity\DictionaryDetails
      joinColumn:
        name: chainDicId
        referencedColumnName: id
  manyToMany:
    departments:
      targetEntity: Department
      cascade: [ "persist" ]
      joinTable:
        name: userDepartments
        joinColumns:
          userId:
            referencedColumnName: id
        inverseJoinColumns:
          departmentId:
            referencedColumnName: id
  lifecycleCallbacks: { }
